
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CONDITION ELSE IDENTIFIER IF LBRACE LPAREN RBRACE RPAREN SEMICOLONstatements : statement\n                  | statements statementstatement : if_statement\n                 | else_if_statement\n                 | else_statement\n                 | other_statement\n                 | empty_statementif_statement : IF LPAREN expressions RPAREN LBRACE expressions RBRACEelse_if_statement : ELSE IF LPAREN expressions RPAREN LBRACE expressions RBRACEelse_statement : ELSE LBRACE expressions RBRACEother_statement : IDENTIFIER SEMICOLONempty_statement : SEMICOLONexpressions : expression\n                   | expressions expressionexpression : IDENTIFIER\n                  | CONDITION\n                  | SEMICOLON'
    
_lr_action_items = {'IF':([0,1,2,3,4,5,6,7,9,11,12,16,27,32,34,],[8,8,-1,-3,-4,-5,-6,-7,14,-12,-2,-11,-10,-8,-9,]),'ELSE':([0,1,2,3,4,5,6,7,11,12,16,27,32,34,],[9,9,-1,-3,-4,-5,-6,-7,-12,-2,-11,-10,-8,-9,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,11,12,13,15,16,17,18,19,20,21,22,23,25,26,27,28,30,31,32,33,34,],[10,10,-1,-3,-4,-5,-6,-7,-12,-2,19,19,-11,19,-13,-15,-16,-17,19,19,-14,19,-10,19,19,19,-8,19,-9,]),'SEMICOLON':([0,1,2,3,4,5,6,7,10,11,12,13,15,16,17,18,19,20,21,22,23,25,26,27,28,30,31,32,33,34,],[11,11,-1,-3,-4,-5,-6,-7,16,-12,-2,21,21,-11,21,-13,-15,-16,-17,21,21,-14,21,-10,21,21,21,-8,21,-9,]),'$end':([1,2,3,4,5,6,7,11,12,16,27,32,34,],[0,-1,-3,-4,-5,-6,-7,-12,-2,-11,-10,-8,-9,]),'LPAREN':([8,14,],[13,22,]),'LBRACE':([9,24,29,],[15,28,31,]),'CONDITION':([13,15,17,18,19,20,21,22,23,25,26,28,30,31,33,],[20,20,20,-13,-15,-16,-17,20,20,-14,20,20,20,20,20,]),'RPAREN':([17,18,19,20,21,25,26,],[24,-13,-15,-16,-17,-14,29,]),'RBRACE':([18,19,20,21,23,25,30,33,],[-13,-15,-16,-17,27,-14,32,34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,12,]),'if_statement':([0,1,],[3,3,]),'else_if_statement':([0,1,],[4,4,]),'else_statement':([0,1,],[5,5,]),'other_statement':([0,1,],[6,6,]),'empty_statement':([0,1,],[7,7,]),'expressions':([13,15,22,28,31,],[17,23,26,30,33,]),'expression':([13,15,17,22,23,26,28,30,31,33,],[18,18,25,18,25,25,18,25,18,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','ifelse.py',49),
  ('statements -> statements statement','statements',2,'p_statements','ifelse.py',50),
  ('statement -> if_statement','statement',1,'p_statement','ifelse.py',53),
  ('statement -> else_if_statement','statement',1,'p_statement','ifelse.py',54),
  ('statement -> else_statement','statement',1,'p_statement','ifelse.py',55),
  ('statement -> other_statement','statement',1,'p_statement','ifelse.py',56),
  ('statement -> empty_statement','statement',1,'p_statement','ifelse.py',57),
  ('if_statement -> IF LPAREN expressions RPAREN LBRACE expressions RBRACE','if_statement',7,'p_if_statement','ifelse.py',60),
  ('else_if_statement -> ELSE IF LPAREN expressions RPAREN LBRACE expressions RBRACE','else_if_statement',8,'p_else_if_statement','ifelse.py',63),
  ('else_statement -> ELSE LBRACE expressions RBRACE','else_statement',4,'p_else_statement','ifelse.py',66),
  ('other_statement -> IDENTIFIER SEMICOLON','other_statement',2,'p_other_statement','ifelse.py',69),
  ('empty_statement -> SEMICOLON','empty_statement',1,'p_empty_statement','ifelse.py',72),
  ('expressions -> expression','expressions',1,'p_expressions','ifelse.py',75),
  ('expressions -> expressions expression','expressions',2,'p_expressions','ifelse.py',76),
  ('expression -> IDENTIFIER','expression',1,'p_expression','ifelse.py',79),
  ('expression -> CONDITION','expression',1,'p_expression','ifelse.py',80),
  ('expression -> SEMICOLON','expression',1,'p_expression','ifelse.py',81),
]
